Source: golang-github-moby-locker
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Shengjing Zhu <zhsj@debian.org>
Section: golang
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any
Standards-Version: 4.6.1
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-moby-locker
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-moby-locker.git
Homepage: https://github.com/moby/locker
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/moby/locker

Package: golang-github-moby-locker-dev
Architecture: all
Depends: ${misc:Depends}
Multi-Arch: foreign
Description: Go library for creating finer-grained locking
 Locker provides a mechanism for creating finer-grained locking to help free up
 more global locks to handle other tasks.
 .
 The implementation looks close to a sync.Mutex, however, the user must provide
 a reference to use to refer to the underlying lock when locking and unlocking,
 and unlock may generate an error.
 .
 If a lock with a given name does not exist when Lock is called, one is
 created.  Lock references are automatically cleaned up on Unlock if nothing
 else is waiting for the lock.
